# Using the node alpine image to build the React app
image: node:alpine

# Cache node modules - speeds up future builds
cache:
  paths:
  - node_modules

# Name the stages involved in the pipeline
stages:
- build
- deploy
  
variables:
  GIT_SUBMODULE_STRATEGY: recursive
  AWS_DEFAULT_REGION: eu-west-1 # The region of our S3 bucket

pages-staging:
  stage: build
  script:
    - npm install # Install all dependencies
    - npm run compile # compile .js files for localisation
    - REACT_APP_GRAPHQL_ENDPOINT=https://home.next.moodle.net/api/graphql CI=false npm run build --prod # Build for prod, need to specify URL of backend API, and CI=false to avoid failing on warnings
    - rm -rf public # CRA and gitlab pages both use the public folder. Only do this in a build pipeline.
    - mv build public # Move build files to public dir for Gitlab Pages
    - cp public/index.html public/404.html # Not necessary, but helps with https://medium.com/@pshrmn/demystifying-single-page-applications-3068d0555d46
  artifacts:
    paths:
    - public # The built files for Gitlab Pages to serve
  only:
    - develop # Only run on staging branch

pages-prod:
  stage: build
  script:
    - npm install # Install all dependencies
    - npm run compile # compile .js files for localisation
    - REACT_APP_GRAPHQL_ENDPOINT=https://home.moodle.net/api/graphql CI=false npm run build --prod # Build for prod, need to specify URL of backend API, and CI=false to avoid failing on warnings
    - rm -rf public # CRA and gitlab pages both use the public folder. Only do this in a build pipeline.
    - mv build public # Move build files to public dir for Gitlab Pages
    - cp public/index.html public/404.html # Not necessary, but helps with https://medium.com/@pshrmn/demystifying-single-page-applications-3068d0555d46
  artifacts:
    paths:
    - public # The built files for Gitlab Pages to serve
  only:
    - master # Only run on production branch
    
deploys3-staging:
  only:
    - develop
  image: "python:latest"  # We use python because there is a well-working AWS Sdk
  stage: deploy
  before_script:
    - pip install awscli # Install the SDK
  script:
    - find public/
    - pwd
    - aws s3 sync public/ s3://${STAGING_BUCKET} --delete --exclude .git --exclude README.md --acl public-read

deploys3-prod:
  only:
    - master
  image: "python:latest"  # We use python because there is a well-working AWS Sdk
  stage: deploy
  before_script:
    - pip install awscli # Install the SDK
  script:
    - find public/
    - pwd
    - aws s3 sync public/ s3://${PRODUCTION_BUCKET} --delete --exclude .git --exclude README.md --acl public-read
