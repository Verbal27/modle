{"remainingRequest":"/home/ivan/Sites/moodlenet/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/home/ivan/Sites/moodlenet/node_modules/@mdx-js/loader/index.js??ref--6-2!/home/ivan/Sites/moodlenet/node_modules/source-map-loader/index.js!/home/ivan/Sites/moodlenet/src/dls/Community.mdx","dependencies":[{"path":"/home/ivan/Sites/moodlenet/src/dls/Community.mdx","mtime":1559054021898},{"path":"/home/ivan/Sites/moodlenet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ivan/Sites/moodlenet/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/ivan/Sites/moodlenet/node_modules/@mdx-js/loader/index.js","mtime":499162500000},{"path":"/home/ivan/Sites/moodlenet/node_modules/source-map-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tICIvaG9tZS9pdmFuL1NpdGVzL21vb2RsZW5ldC9ub2RlX21vZHVsZXMvZG9jei1jb3JlL25vZGVfbW9kdWxlcy9iYWJlbC1wcmVzZXQtcmVhY3QtYXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllcyI7CnZhciBfanN4RmlsZU5hbWUgPSAiL2hvbWUvaXZhbi9TaXRlcy9tb29kbGVuZXQvc3JjL2Rscy9Db21tdW5pdHkubWR4IjsKCihmdW5jdGlvbiAoKSB7CiAgdmFyIGVudGVyTW9kdWxlID0gKHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbCA6IHJlcXVpcmUoJ3JlYWN0LWhvdC1sb2FkZXInKSkuZW50ZXJNb2R1bGU7CiAgZW50ZXJNb2R1bGUgJiYgZW50ZXJNb2R1bGUobW9kdWxlKTsKfSkoKTsKCi8qIEBqc3ggbWR4ICovCmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7CmltcG9ydCB7IG1keCB9IGZyb20gJ0BtZHgtanMvcmVhY3QnOwovKiBAanN4IG1keCAqLwoKaW1wb3J0IENvbW11bml0eSBmcm9tICcuLi9jb21wb25lbnRzL2VsZW1lbnRzL0NvbW11bml0eS9Db21tdW5pdHknOwppbXBvcnQgeyBCb3gsIENhcmQsIEltYWdlLCBIZWFkaW5nLCBUZXh0IH0gZnJvbSAncmViYXNzJzsKdmFyIHRleHQgPSB7CiAgdG90YWxDb3VudDogMTAsCiAgaWNvbjogJ2h0dHBzOi8vaW1hZ2VzLnVuc3BsYXNoLmNvbS9waG90by0xNTU3OTI2MDA1LTAxMmJkNDM4MmEwZD9peGxpYj1yYi0xLjIuMSZpeGlkPWV5SmhjSEJmYVdRaU9qRXlNRGQ5JmF1dG89Zm9ybWF0JmZpdD1jcm9wJnc9NTAwJnE9NjAnLAogIGlkOiAnMScsCiAgbG9jYWxJZDogJzUnLAogIHByZWZlcnJlZFVzZXJuYW1lOiAnVmlldG5hbV93YXInLAogIG5hbWU6ICdWaWV0bmFtIHdhcicsCiAgc3VtbWFyeTogJ0lmIHlvdSBoYXZlIGFuIEFQSSBlbmRwb2ludCB0aGF0IGFsdGVycyBkYXRhLCBsaWtlIGluc2VydGluZyBkYXRhIGludG8gYSBkYXRhYmFzZSBvciBhbHRlcmluZyBkYXRhIGFscmVhZHkgaW4gYSBkYXRhYmFzZSwgeW91IHNob3VsZCBtYWtlIHRoaXMgZW5kcG9pbnQgYSBNdXRhdGlvbiByYXRoZXIgdGhhbiBhIFF1ZXJ5LiBUaGlzIGlzIGFzIHNpbXBsZSBhcyBtYWtpbmcgdGhlIEFQSSBlbmRwb2ludCBwYXJ0IG9mIHRoZSB0b3AtbGV2ZWwgTXV0YXRpb24gdHlwZSBpbnN0ZWFkIG9mIHRoZSB0b3AtbGV2ZWwgUXVlcnkgdHlwZS4nCn07Cgp2YXIgbWFrZVNob3J0Y29kZSA9IGZ1bmN0aW9uIG1ha2VTaG9ydGNvZGUobmFtZSkgewogIHJldHVybiBmdW5jdGlvbiBNRFhEZWZhdWx0U2hvcnRjb2RlKHByb3BzKSB7CiAgICBjb25zb2xlLndhcm4oIkNvbXBvbmVudCAiICsgbmFtZSArICIgd2FzIG5vdCBpbXBvcnRlZCwgZXhwb3J0ZWQsIG9yIHByb3ZpZGVkIGJ5IE1EWFByb3ZpZGVyIGFzIGdsb2JhbCBzY29wZSIpOwogICAgcmV0dXJuIG1keCgiZGl2IiwgT2JqZWN0LmFzc2lnbih7fSwgcHJvcHMsIHsKICAgICAgX19zb3VyY2U6IHsKICAgICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICAgIGxpbmVOdW1iZXI6IDI2CiAgICAgIH0sCiAgICAgIF9fc2VsZjogdGhpcwogICAgfSkpOwogIH07Cn07Cgp2YXIgbGF5b3V0UHJvcHMgPSB7fTsKdmFyIE1EWExheW91dCA9ICJ3cmFwcGVyIjsKZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTURYQ29udGVudChfcmVmKSB7CiAgdmFyIGNvbXBvbmVudHMgPSBfcmVmLmNvbXBvbmVudHMsCiAgICAgIHByb3BzID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKF9yZWYsIFsiY29tcG9uZW50cyJdKTsKCiAgcmV0dXJuIG1keChNRFhMYXlvdXQsIE9iamVjdC5hc3NpZ24oe30sIGxheW91dFByb3BzLCBwcm9wcywgewogICAgY29tcG9uZW50czogY29tcG9uZW50cywKICAgIG1keFR5cGU6ICJNRFhMYXlvdXQiLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMzcKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9KSwgbWR4KCJoMSIsIE9iamVjdC5hc3NpZ24oewogICAgImlkIjogImNvbW11bml0eSIKICB9LCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAzOQogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0pLCAiQ29tbXVuaXR5IiksIG1keChCb3gsIHsKICAgIHdpZHRoOiAyNTYsCiAgICBtZHhUeXBlOiAiQm94IiwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDQyCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgbWR4KENvbW11bml0eSwgewogICAga2V5OiAxLAogICAgc3VtbWFyeTogdGV4dC5zdW1tYXJ5LAogICAgdGl0bGU6IHRleHQubmFtZSwKICAgIGNvbGxlY3Rpb25zQ291bnQ6IHRleHQudG90YWxDb3VudCwKICAgIGljb246IHRleHQuaWNvbiB8fCAnJywKICAgIGZvbGxvd2VkOiB0ZXh0LmZvbGxvd2VkLAogICAgaWQ6IHRleHQubG9jYWxJZCwKICAgIGV4dGVybmFsSWQ6IHRleHQuaWQsCiAgICBmb2xsb3dlcnNDb3VudDogdGV4dC50b3RhbENvdW50LAogICAgdGhyZWFkc0NvdW50OiB0ZXh0LnRvdGFsQ291bnQsCiAgICBtZHhUeXBlOiAiQ29tbXVuaXR5IiwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDQzCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSkpKTsKfQoKaWYgKHR5cGVvZiBNRFhDb250ZW50ICE9PSAndW5kZWZpbmVkJyAmJiBNRFhDb250ZW50ICYmIE1EWENvbnRlbnQgPT09IE9iamVjdChNRFhDb250ZW50KSAmJiBPYmplY3QuaXNFeHRlbnNpYmxlKE1EWENvbnRlbnQpKSB7CiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KE1EWENvbnRlbnQsICdfX2ZpbGVtZXRhJywgewogICAgZW51bWVyYWJsZTogdHJ1ZSwKICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSwKICAgIHZhbHVlOiB7CiAgICAgIG5hbWU6ICJNRFhDb250ZW50IiwKICAgICAgZmlsZW5hbWU6ICJzcmMvZGxzL0NvbW11bml0eS5tZHgiCiAgICB9CiAgfSk7Cn0KCk1EWENvbnRlbnQuaXNNRFhDb21wb25lbnQgPSB0cnVlOwo7CgooZnVuY3Rpb24gKCkgewogIHZhciByZWFjdEhvdExvYWRlciA9ICh0eXBlb2YgcmVhY3RIb3RMb2FkZXJHbG9iYWwgIT09ICd1bmRlZmluZWQnID8gcmVhY3RIb3RMb2FkZXJHbG9iYWwgOiByZXF1aXJlKCdyZWFjdC1ob3QtbG9hZGVyJykpLmRlZmF1bHQ7CgogIGlmICghcmVhY3RIb3RMb2FkZXIpIHsKICAgIHJldHVybjsKICB9CgogIHJlYWN0SG90TG9hZGVyLnJlZ2lzdGVyKHRleHQsICJ0ZXh0IiwgIi9ob21lL2l2YW4vU2l0ZXMvbW9vZGxlbmV0L3NyYy9kbHMvQ29tbXVuaXR5Lm1keCIpOwogIHJlYWN0SG90TG9hZGVyLnJlZ2lzdGVyKG1ha2VTaG9ydGNvZGUsICJtYWtlU2hvcnRjb2RlIiwgIi9ob21lL2l2YW4vU2l0ZXMvbW9vZGxlbmV0L3NyYy9kbHMvQ29tbXVuaXR5Lm1keCIpOwogIHJlYWN0SG90TG9hZGVyLnJlZ2lzdGVyKGxheW91dFByb3BzLCAibGF5b3V0UHJvcHMiLCAiL2hvbWUvaXZhbi9TaXRlcy9tb29kbGVuZXQvc3JjL2Rscy9Db21tdW5pdHkubWR4Iik7CiAgcmVhY3RIb3RMb2FkZXIucmVnaXN0ZXIoTURYTGF5b3V0LCAiTURYTGF5b3V0IiwgIi9ob21lL2l2YW4vU2l0ZXMvbW9vZGxlbmV0L3NyYy9kbHMvQ29tbXVuaXR5Lm1keCIpOwogIHJlYWN0SG90TG9hZGVyLnJlZ2lzdGVyKE1EWENvbnRlbnQsICJNRFhDb250ZW50IiwgIi9ob21lL2l2YW4vU2l0ZXMvbW9vZGxlbmV0L3NyYy9kbHMvQ29tbXVuaXR5Lm1keCIpOwp9KSgpOwoKOwoKKGZ1bmN0aW9uICgpIHsKICB2YXIgbGVhdmVNb2R1bGUgPSAodHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsIDogcmVxdWlyZSgncmVhY3QtaG90LWxvYWRlcicpKS5sZWF2ZU1vZHVsZTsKICBsZWF2ZU1vZHVsZSAmJiBsZWF2ZU1vZHVsZShtb2R1bGUpOwp9KSgpOw=="},{"version":3,"sources":["/home/ivan/Sites/moodlenet/src/dls/Community.mdx"],"names":["React","mdx","Community","Box","Card","Image","Heading","Text","text","totalCount","icon","id","localId","preferredUsername","name","summary","makeShortcode","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","followed","isMDXComponent"],"mappings":";;;;;;;;AAAA;AACE,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,eAApB;AACA;;AACF,OAAOC,SAAP,MAAsB,4CAAtB;AACA,SACEC,GADF,EAEEC,IAFF,EAGEC,KAHF,EAIEC,OAJF,EAKEC,IALF,QAMO,QANP;AAOA,IAAMC,IAAI,GAAG;AACXC,EAAAA,UAAU,EAAE,EADD;AAEXC,EAAAA,IAAI,EAAE,oIAFK;AAGXC,EAAAA,EAAE,EAAE,GAHO;AAIXC,EAAAA,OAAO,EAAE,GAJE;AAKXC,EAAAA,iBAAiB,EAAE,aALR;AAMXC,EAAAA,IAAI,EAAE,aANK;AAOXC,EAAAA,OAAO,EACL;AARS,CAAb;;AAWA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAF,IAAI;AAAA,SAAI,SAASG,mBAAT,CAA6BC,KAA7B,EAAoC;AAChEC,IAAAA,OAAO,CAACC,IAAR,CAAa,eAAeN,IAAf,GAAsB,yEAAnC;AACA,WAAO,6BAASI,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD,GAHyB;AAAA,CAA1B;;AAKA,IAAMG,WAAW,GAAG,EAApB;AAGA,IAAMC,SAAS,GAAG,SAAlB;AACA,eAAe,SAASC,UAAT,OAGZ;AAAA,MAFDC,UAEC,QAFDA,UAEC;AAAA,MADEN,KACF;;AACD,SAAO,IAAC,SAAD,oBAAeG,WAAf,EAAgCH,KAAhC;AAAuC,IAAA,UAAU,EAAEM,UAAnD;AAA+D,IAAA,OAAO,EAAC,WAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAEL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFK,EAKL,IAAC,GAAD;AAAK,IAAA,KAAK,EAAE,GAAZ;AAAiB,IAAA,OAAO,EAAC,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,IAAC,SAAD;AAAW,IAAA,GAAG,EAAE,CAAhB;AAAmB,IAAA,OAAO,EAAEhB,IAAI,CAACO,OAAjC;AAA0C,IAAA,KAAK,EAAEP,IAAI,CAACM,IAAtD;AAA4D,IAAA,gBAAgB,EAAEN,IAAI,CAACC,UAAnF;AAA+F,IAAA,IAAI,EAAED,IAAI,CAACE,IAAL,IAAa,EAAlH;AAAsH,IAAA,QAAQ,EAAEF,IAAI,CAACiB,QAArI;AAA+I,IAAA,EAAE,EAAEjB,IAAI,CAACI,OAAxJ;AAAiK,IAAA,UAAU,EAAEJ,IAAI,CAACG,EAAlL;AAAsL,IAAA,cAAc,EAAEH,IAAI,CAACC,UAA3M;AAAuN,IAAA,YAAY,EAAED,IAAI,CAACC,UAA1O;AAAsP,IAAA,OAAO,EAAC,WAA9P;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALK,CAAP;AASD;;;;;;;;;;;;;AAEDc,UAAU,CAACG,cAAX,GAA4B,IAA5B;;;;;;;;;;0BAnCMlB,I;0BAWAQ,a;0BAKAK,W;0BAGAC,S;0BACkBC,U","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport Community from '../components/elements/Community/Community'\nimport {\n  Box,\n  Card,\n  Image,\n  Heading,\n  Text\n} from 'rebass'\nconst text = {\n  totalCount: 10,\n  icon: 'https://images.unsplash.com/photo-1557926005-012bd4382a0d?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60',\n  id: '1',\n  localId: '5',\n  preferredUsername: 'Vietnam_war',\n  name: 'Vietnam war',\n  summary:\n    'If you have an API endpoint that alters data, like inserting data into a database or altering data already in a database, you should make this endpoint a Mutation rather than a Query. This is as simple as making the API endpoint part of the top-level Mutation type instead of the top-level Query type.'\n};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"community\"\n    }}>{`Community`}</h1>\n    <Box width={256} mdxType=\"Box\">\n      <Community key={1} summary={text.summary} title={text.name} collectionsCount={text.totalCount} icon={text.icon || ''} followed={text.followed} id={text.localId} externalId={text.id} followersCount={text.totalCount} threadsCount={text.totalCount} mdxType=\"Community\" />\n    </Box>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}