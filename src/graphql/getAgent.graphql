#import "./fragments/basicComment.graphql"
#import "./fragments/basicCollection.graphql"
#import "./fragments/basicResource.graphql"
#import "./fragments/basicCommunity.graphql"
#import "./fragments/basicUser.graphql"
query getAgentQuery(
  $userId: String!
  $limitComm: Int
  $endComm: String
  $limitColl: Int
  $endColl: String
  $limitTimeline: Int 
  $endTimeline: String
) {
  user(userId: $userId) {
    id
    canonicalUrl
    preferredUsername
    name
    summary
    location
    website
    icon
    image
    isLocal
    isPublic
    isDisabled
    createdAt
    updatedAt
    lastActivity
    myFollow { id }
    myLike { id }
    outbox (limit: $limitTimeline, after:$endTimeline) {
      pageInfo { startCursor endCursor }
      edges {
        node {
          id
          canonicalUrl
          verb
          isLocal
          isPublic
          createdAt
          user {
            ...BasicUser
          }
          context {
            __typename
            ... on Community  { ...BasicCommunity  }
            ... on Collection { ...BasicCollection }
            ... on Resource   { ...BasicResource   }
            ... on Comment    { ...BasicCommentWithInReplyTo    }
          }       
        }
      }
    }
    followedCommunities(limit: $limitComm, after:$endComm) {
      pageInfo { startCursor endCursor }
      edges {
        node {
          follow{
            id
            canonicalUrl
            isLocal
            isPublic
            createdAt
          }
          community {
            __typename
            ... on Community {
              id
              canonicalUrl
              preferredUsername
              name
              summary
              icon
              image
              isLocal
              isPublic
              isDisabled
              createdAt
              updatedAt
              lastActivity
              myFollow { id }
              collections { totalCount }
              followers { totalCount }
              threads { totalCount }
            }
          }
        }
      }
    }
    followedCollections(limit: $limitColl, after:$endColl) {
      pageInfo { startCursor endCursor }
      edges {
        node {
          follow {
            id
            canonicalUrl
            isLocal
            isPublic
            createdAt
          }
          collection {
            __typename
            ... on Collection {
              id
              canonicalUrl
              preferredUsername
              name
              summary
              icon
              isLocal
              isPublic
              isDisabled
              createdAt
              updatedAt
              lastActivity
              myFollow { id }
              myLike   { id }
              community { id }
              resources { totalCount }
              followers { totalCount }
              likes     { totalCount }
              threads   { totalCount }
            }
          }
        }
      }
    }
  }
}
